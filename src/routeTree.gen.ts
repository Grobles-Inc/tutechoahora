/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PropiedadesRouteImport } from './routes/propiedades'
import { Route as PropiedadTempRouteImport } from './routes/propiedad-temp'
import { Route as PropiedadRouteImport } from './routes/propiedad'
import { Route as NosotrosRouteImport } from './routes/nosotros'
import { Route as ContactoRouteImport } from './routes/contacto'
import { Route as AgregarPropiedadRouteImport } from './routes/agregar-propiedad'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PropiedadPropiedadIdRouteImport } from './routes/propiedad.$propiedadId'
import { Route as PropiedadIdRouteImport } from './routes/propiedad/$id'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const PropiedadesRoute = PropiedadesRouteImport.update({
  id: '/propiedades',
  path: '/propiedades',
  getParentRoute: () => rootRouteImport,
} as any)
const PropiedadTempRoute = PropiedadTempRouteImport.update({
  id: '/propiedad-temp',
  path: '/propiedad-temp',
  getParentRoute: () => rootRouteImport,
} as any)
const PropiedadRoute = PropiedadRouteImport.update({
  id: '/propiedad',
  path: '/propiedad',
  getParentRoute: () => rootRouteImport,
} as any)
const NosotrosRoute = NosotrosRouteImport.update({
  id: '/nosotros',
  path: '/nosotros',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactoRoute = ContactoRouteImport.update({
  id: '/contacto',
  path: '/contacto',
  getParentRoute: () => rootRouteImport,
} as any)
const AgregarPropiedadRoute = AgregarPropiedadRouteImport.update({
  id: '/agregar-propiedad',
  path: '/agregar-propiedad',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PropiedadPropiedadIdRoute = PropiedadPropiedadIdRouteImport.update({
  id: '/$propiedadId',
  path: '/$propiedadId',
  getParentRoute: () => PropiedadRoute,
} as any)
const PropiedadIdRoute = PropiedadIdRouteImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => PropiedadRoute,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agregar-propiedad': typeof AgregarPropiedadRoute
  '/contacto': typeof ContactoRoute
  '/nosotros': typeof NosotrosRoute
  '/propiedad': typeof PropiedadRouteWithChildren
  '/propiedad-temp': typeof PropiedadTempRoute
  '/propiedades': typeof PropiedadesRoute
  '/propiedad/$id': typeof PropiedadIdRoute
  '/propiedad/$propiedadId': typeof PropiedadPropiedadIdRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agregar-propiedad': typeof AgregarPropiedadRoute
  '/contacto': typeof ContactoRoute
  '/nosotros': typeof NosotrosRoute
  '/propiedad': typeof PropiedadRouteWithChildren
  '/propiedad-temp': typeof PropiedadTempRoute
  '/propiedades': typeof PropiedadesRoute
  '/propiedad/$id': typeof PropiedadIdRoute
  '/propiedad/$propiedadId': typeof PropiedadPropiedadIdRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/agregar-propiedad': typeof AgregarPropiedadRoute
  '/contacto': typeof ContactoRoute
  '/nosotros': typeof NosotrosRoute
  '/propiedad': typeof PropiedadRouteWithChildren
  '/propiedad-temp': typeof PropiedadTempRoute
  '/propiedades': typeof PropiedadesRoute
  '/propiedad/$id': typeof PropiedadIdRoute
  '/propiedad/$propiedadId': typeof PropiedadPropiedadIdRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agregar-propiedad'
    | '/contacto'
    | '/nosotros'
    | '/propiedad'
    | '/propiedad-temp'
    | '/propiedades'
    | '/propiedad/$id'
    | '/propiedad/$propiedadId'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agregar-propiedad'
    | '/contacto'
    | '/nosotros'
    | '/propiedad'
    | '/propiedad-temp'
    | '/propiedades'
    | '/propiedad/$id'
    | '/propiedad/$propiedadId'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/agregar-propiedad'
    | '/contacto'
    | '/nosotros'
    | '/propiedad'
    | '/propiedad-temp'
    | '/propiedades'
    | '/propiedad/$id'
    | '/propiedad/$propiedadId'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgregarPropiedadRoute: typeof AgregarPropiedadRoute
  ContactoRoute: typeof ContactoRoute
  NosotrosRoute: typeof NosotrosRoute
  PropiedadRoute: typeof PropiedadRouteWithChildren
  PropiedadTempRoute: typeof PropiedadTempRoute
  PropiedadesRoute: typeof PropiedadesRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/propiedades': {
      id: '/propiedades'
      path: '/propiedades'
      fullPath: '/propiedades'
      preLoaderRoute: typeof PropiedadesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/propiedad-temp': {
      id: '/propiedad-temp'
      path: '/propiedad-temp'
      fullPath: '/propiedad-temp'
      preLoaderRoute: typeof PropiedadTempRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/propiedad': {
      id: '/propiedad'
      path: '/propiedad'
      fullPath: '/propiedad'
      preLoaderRoute: typeof PropiedadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nosotros': {
      id: '/nosotros'
      path: '/nosotros'
      fullPath: '/nosotros'
      preLoaderRoute: typeof NosotrosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contacto': {
      id: '/contacto'
      path: '/contacto'
      fullPath: '/contacto'
      preLoaderRoute: typeof ContactoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agregar-propiedad': {
      id: '/agregar-propiedad'
      path: '/agregar-propiedad'
      fullPath: '/agregar-propiedad'
      preLoaderRoute: typeof AgregarPropiedadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/propiedad/$propiedadId': {
      id: '/propiedad/$propiedadId'
      path: '/$propiedadId'
      fullPath: '/propiedad/$propiedadId'
      preLoaderRoute: typeof PropiedadPropiedadIdRouteImport
      parentRoute: typeof PropiedadRoute
    }
    '/propiedad/$id': {
      id: '/propiedad/$id'
      path: '/$id'
      fullPath: '/propiedad/$id'
      preLoaderRoute: typeof PropiedadIdRouteImport
      parentRoute: typeof PropiedadRoute
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface PropiedadRouteChildren {
  PropiedadIdRoute: typeof PropiedadIdRoute
  PropiedadPropiedadIdRoute: typeof PropiedadPropiedadIdRoute
}

const PropiedadRouteChildren: PropiedadRouteChildren = {
  PropiedadIdRoute: PropiedadIdRoute,
  PropiedadPropiedadIdRoute: PropiedadPropiedadIdRoute,
}

const PropiedadRouteWithChildren = PropiedadRoute._addFileChildren(
  PropiedadRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgregarPropiedadRoute: AgregarPropiedadRoute,
  ContactoRoute: ContactoRoute,
  NosotrosRoute: NosotrosRoute,
  PropiedadRoute: PropiedadRouteWithChildren,
  PropiedadTempRoute: PropiedadTempRoute,
  PropiedadesRoute: PropiedadesRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
