/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as PropiedadesRouteImport } from './routes/propiedades'
import { Route as NosotrosRouteImport } from './routes/nosotros'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ContactoRouteImport } from './routes/contacto'
import { Route as AgregarRouteImport } from './routes/agregar'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PropiedadIdRouteImport } from './routes/propiedad.$id'

const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const PropiedadesRoute = PropiedadesRouteImport.update({
  id: '/propiedades',
  path: '/propiedades',
  getParentRoute: () => rootRouteImport,
} as any)
const NosotrosRoute = NosotrosRouteImport.update({
  id: '/nosotros',
  path: '/nosotros',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactoRoute = ContactoRouteImport.update({
  id: '/contacto',
  path: '/contacto',
  getParentRoute: () => rootRouteImport,
} as any)
const AgregarRoute = AgregarRouteImport.update({
  id: '/agregar',
  path: '/agregar',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PropiedadIdRoute = PropiedadIdRouteImport.update({
  id: '/propiedad/$id',
  path: '/propiedad/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agregar': typeof AgregarRoute
  '/contacto': typeof ContactoRoute
  '/dashboard': typeof DashboardRoute
  '/nosotros': typeof NosotrosRoute
  '/propiedades': typeof PropiedadesRoute
  '/signin': typeof SigninRoute
  '/propiedad/$id': typeof PropiedadIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agregar': typeof AgregarRoute
  '/contacto': typeof ContactoRoute
  '/dashboard': typeof DashboardRoute
  '/nosotros': typeof NosotrosRoute
  '/propiedades': typeof PropiedadesRoute
  '/signin': typeof SigninRoute
  '/propiedad/$id': typeof PropiedadIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/agregar': typeof AgregarRoute
  '/contacto': typeof ContactoRoute
  '/dashboard': typeof DashboardRoute
  '/nosotros': typeof NosotrosRoute
  '/propiedades': typeof PropiedadesRoute
  '/signin': typeof SigninRoute
  '/propiedad/$id': typeof PropiedadIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agregar'
    | '/contacto'
    | '/dashboard'
    | '/nosotros'
    | '/propiedades'
    | '/signin'
    | '/propiedad/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agregar'
    | '/contacto'
    | '/dashboard'
    | '/nosotros'
    | '/propiedades'
    | '/signin'
    | '/propiedad/$id'
  id:
    | '__root__'
    | '/'
    | '/agregar'
    | '/contacto'
    | '/dashboard'
    | '/nosotros'
    | '/propiedades'
    | '/signin'
    | '/propiedad/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgregarRoute: typeof AgregarRoute
  ContactoRoute: typeof ContactoRoute
  DashboardRoute: typeof DashboardRoute
  NosotrosRoute: typeof NosotrosRoute
  PropiedadesRoute: typeof PropiedadesRoute
  SigninRoute: typeof SigninRoute
  PropiedadIdRoute: typeof PropiedadIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/propiedades': {
      id: '/propiedades'
      path: '/propiedades'
      fullPath: '/propiedades'
      preLoaderRoute: typeof PropiedadesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nosotros': {
      id: '/nosotros'
      path: '/nosotros'
      fullPath: '/nosotros'
      preLoaderRoute: typeof NosotrosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contacto': {
      id: '/contacto'
      path: '/contacto'
      fullPath: '/contacto'
      preLoaderRoute: typeof ContactoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agregar': {
      id: '/agregar'
      path: '/agregar'
      fullPath: '/agregar'
      preLoaderRoute: typeof AgregarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/propiedad/$id': {
      id: '/propiedad/$id'
      path: '/propiedad/$id'
      fullPath: '/propiedad/$id'
      preLoaderRoute: typeof PropiedadIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgregarRoute: AgregarRoute,
  ContactoRoute: ContactoRoute,
  DashboardRoute: DashboardRoute,
  NosotrosRoute: NosotrosRoute,
  PropiedadesRoute: PropiedadesRoute,
  SigninRoute: SigninRoute,
  PropiedadIdRoute: PropiedadIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
